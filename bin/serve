#!/usr/bin/env node

/**
 * Run a local development server.
 */

require('babel-register');
require.extensions['.css'] = () => {
  return;
};

const fs = require('fs');
const path = require('path');
const argv = require('minimist')(process.argv.slice(2));
const app = require('../src/server/app').default; 
const drive = require('../src/google-drive');
const webpackDevMiddleware = require("webpack-dev-middleware");
const webpack = require("webpack");
const webpackConfig = require("../webpack.config");

const docUrl = argv._[0];
const tokenFilename = process.env.TOKEN_FILENAME || 'doj_tracker.json';
const tokenPath = path.join(drive.DEFAULT_TOKEN_DIR, tokenFilename);

fs.readFile(argv['client-secret'], function (err, content) {
  if (err) {
    process.stderr.write(`Error loading client secret file: ${err}\n`);
    return;
  }

  const authOptions = {
    tokenPath: tokenPath,
  };

  drive.authorize(JSON.parse(content), authOptions, function (oauth2Client) {
    const compiler = webpack(webpackConfig);

    app.use(webpackDevMiddleware(compiler, {
      publicPath: "/" // Same as `output.publicPath` in most cases.
    }));

    app.locals.oauth2Client = oauth2Client;
    app.locals.docUrl = docUrl;
    app.listen(3000, function () {
      console.log('Example app listening on port 3000!');
    });
  });
});
